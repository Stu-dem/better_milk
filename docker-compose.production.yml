version: '3.8'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_redis_data: {}
  production_traefik: {}

services:
  django: &django
    build:
      context: ./backend
      dockerfile: ./compose/production/django/Dockerfile
    image: backend_production_django
    container_name: backend_production_django
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app:z
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    ports:
      - '8000:8000'
    command: /start
    working_dir: /app

  postgres:
    build:
      context: ./backend
      dockerfile: ./compose/production/postgres/Dockerfile
    image: backend_production_postgres
    container_name: backend_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres
    working_dir: /app

  traefik:
    build:
      context: ./backend
      dockerfile: ./compose/production/traefik/Dockerfile
    image: backend_production_traefik
    container_name: backend_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
      - '0.0.0.0:5555:5555'
    working_dir: /app

  redis:
    image: docker.io/redis:6
    container_name: backend_production_redis
    volumes:
      - production_redis_data:/data
    working_dir: /app

  celeryworker:
    <<: *django
    image: backend_production_celeryworker
    container_name: backend_production_celeryworker
    command: /start-celeryworker
    working_dir: /app

  celerybeat:
    <<: *django
    image: backend_production_celerybeat
    container_name: backend_production_celerybeat
    command: /start-celerybeat
    working_dir: /app

  flower:
    <<: *django
    image: backend_production_flower
    container_name: backend_production_flower
    command: /start-flower
    working_dir: /app

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z

  frontend:
    build:
      context: ./frontend
      dockerfile: ./compose/production/Dockerfile
    image: frontend_production_nextjs
    container_name: frontend_production_nextjs
    volumes:
      - ./frontend:/app:z
    ports:
      - '3000:3000'
    env_file:
      - ./frontend/.envs/.production
    working_dir: /app